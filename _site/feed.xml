<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Dayelyn</title>
		<description>Robotics</description>
		<link>http://localhost:4000</link>
		<atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>Shortest Route Searching with Limited Conditions</title>
				<description>&lt;h1 id=&quot;abstract&quot;&gt;Abstract&lt;/h1&gt;

&lt;p&gt;This is the the first paper of three I have been received from the company as the The literature study. &lt;strong&gt;The main idea&lt;/strong&gt; of the paper is searching for the shortest route under specific conditions as following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Parking in a node of a directed graph is limited in a certain period;&lt;/li&gt;
  &lt;li&gt;Not all desirable delay of departure time from a given node is permitted (almost the same with bullet 1);&lt;/li&gt;
  &lt;li&gt;Travelling time along the edge leading from i to j depends on the departure time from i.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Lots of pernomena in the real life can be modelled as the problem with mentioned conditions. An example is a one-way road with traffic light system.&lt;/p&gt;

&lt;h1 id=&quot;problem-formulation&quot;&gt;Problem Formulation&lt;/h1&gt;
&lt;p&gt;Define $G = (N,E)$ as an $n$-node finite directed graph, then we denote:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;$N = \{1,…,n\}$:            the set of all nodes;&lt;/li&gt;
  &lt;li&gt;$E = \{(i, j), i, j\in N\}$:  the set of all directed edges;&lt;/li&gt;
  &lt;li&gt;$N_k = \{j \in N, (k,j) \in E\}$: the set of all j that edge exists from $k$ to $j$;&lt;/li&gt;
  &lt;li&gt;$N^*$:                        the set of known nodes in the shortest route from origin;&lt;/li&gt;
  &lt;li&gt;$N^{**}$:                     the set of all nodes that reachable from current node;&lt;/li&gt;
  &lt;li&gt;$d_{ij}(t)$:                  travelling time from node $i$ to $j$;&lt;/li&gt;
  &lt;li&gt;$P_i = \{ [\alpha_i^h,  \beta_i^h], h = 1,…,H_i\}$: the set of permitted parking time intervals at node i;&lt;/li&gt;
  &lt;li&gt;$A_j$: the set of feasible arrival times to node $j$;&lt;/li&gt;
  &lt;li&gt;$D_j$: the set of feasible departure times from node $j$, $D_j = g(A_j, P_j)$.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A feasible route from node $r$ to node $s$ in $G$ is featured by:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ordered set of nodes $\{r = i_1, i_2, …,i_q = s\}$ such that $(i_k, i_{k+1}) \in E$ for all $k = 1, …, q-1$;&lt;/li&gt;
  &lt;li&gt;ordered set of pairs of time $\{(t_{i_1}^{‘},  t_{i_1}^{“}),…,(t_{i_q}^{‘},  t_{i_q}^{“})\}$, where $t_j^{‘}$ is the arrival time to node $j$ and $t_j^{“}$ is the departure time from $t_j$.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then if a node $i_k$ is feasible in the route, the requirements are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;$(t_{i_k}^{‘},  t_{i_k}^{“}) \in P_{i_k}$, indicating the delayed time in node $i_k$ should lies in the permitted time interval;&lt;/li&gt;
  &lt;li&gt;$d_{i_ki_{k+1}}(t_{i_k}^{“}) &amp;lt; \infty$, indicating no discontinuity on the edge $(i_k, i_{k+1})$. If there is any, a new node can be construct to avoid the problem. &lt;strong&gt;(The unvaild edge will be divided into two parts, which can be used to cut unavailable paths.)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then the problem can be formulated as: &lt;strong&gt;finding a feasible route $\{r = i_1, i_2, …,i_q = s\}$ from $r$ to $s$, minimizes $t_s^{‘}.$&lt;/strong&gt;&lt;/p&gt;

&lt;h1 id=&quot;solution&quot;&gt;Solution&lt;/h1&gt;
&lt;h2 id=&quot;preliminary&quot;&gt;Preliminary&lt;/h2&gt;
&lt;p&gt;A few conclusions should be specified before we introduce the algorithm to solve the problem:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Since the parking and delay is limited in the problem, a cycle (visiting a node more than once) can be involved in the final route to find the shortest route;&lt;/li&gt;
  &lt;li&gt;Due to bullet 1, it is necessary to update $A_j$ whenever $N^*$ is expanded;&lt;/li&gt;
  &lt;li&gt;$D_j$ is constructed with $A_j$ and $P_j$. If $A_j \cap [\alpha_j^h,  \beta_j^h] = \varnothing$, indicating no parking at node $j$, then $D_j = A_j$; if $A_j \cap [\alpha_j^h,  \beta_j^h] \not = \varnothing, Min \{ A_j \cap [\alpha_j^h,  \beta_j^h] \} = t^{‘}$, indicating parking occurs at the node $j$ and $t^{‘}$ is the smallest time point, then $\forall t: t^{‘} \leq t \leq \beta_j^h, t \in D_j$;&lt;/li&gt;
  &lt;li&gt;The algorithm keeps expanding &lt;script type=&quot;math/tex&quot;&gt;N^{**}&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;N^*&lt;/script&gt;, and transferring candidates in &lt;script type=&quot;math/tex&quot;&gt;N^{**}&lt;/script&gt; to &lt;script type=&quot;math/tex&quot;&gt;N^*&lt;/script&gt;. Once the destination has been added into &lt;script type=&quot;math/tex&quot;&gt;N^*&lt;/script&gt;, the shortest route is found.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;algorithm&quot;&gt;Algorithm&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Initialization:&lt;/strong&gt; Set the start point to $r$&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;$N^*=\varnothing, N^{**}={r}$&lt;/li&gt;
  &lt;li&gt;$A_1 = {0}, D_1=\varnothing, A_j=D_j=0$&lt;/li&gt;
  &lt;li&gt;$k = r$&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Transfer Node:&lt;/strong&gt; transfer valid node $k$ from &lt;script type=&quot;math/tex&quot;&gt;N^{**}&lt;/script&gt; to $N^*$, update $D_k$&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;$N^* = N^* \cup \{k\}$, &lt;script type=&quot;math/tex&quot;&gt;N^{**} = N^{**} - \{k\}&lt;/script&gt;&lt;/li&gt;
  &lt;li&gt;$D = g(A_k, P_k) - D_k$, $D_k = D_k \cup D$, $A_k = \varnothing$. Here excluding $D_k$ because we need a new departure time if we do not visit $k$ for the first time. The old time needs to be removed to update $D_k$. After moving $k$ into $N^*$, $A_k$ can be set to $\varnothing$ because it has already been an available point.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Search for Available Nodes:&lt;/strong&gt; search for available nodes and add them into $N^{**}$, update $A_j$&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;$\forall j \in N_k$, compute $A_j = A_j \cup \{t + d_{kj}(t),t \in D\} - D_j$. Here is the same reason as mentioned to exclude $D_j$. We always need the current arrival and departure time.&lt;/li&gt;
  &lt;li&gt;$\bar N_k = \{ j \in N_k, A_j \not = \varnothing\}$ represents all reachable nodes start from $k$&lt;/li&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;N^{**} = N^{**} \cup \bar N_k&lt;/script&gt;, add reachable nodes to $N^{**}$&lt;/li&gt;
  &lt;li&gt;if $N^{**} = \varnothing$, then the algorithm is terminated because there is no feasible route. Otherwise continue to the next step&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Search for the Nodes with Shortest Time Consuming:&lt;/strong&gt; in all available nodes, search for the one with shortest time comsuming. If it is the destination point, then terminate. Otherwise transfer it to $N^*$ and keep loop&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;$\forall j \in \bar N_k$, compute $T_j = inf\{t, t\in A_j\}$. Here we define $T_j$ as the infimum of time consuming when entering node $j$&lt;/li&gt;
  &lt;li&gt;Let &lt;script type=&quot;math/tex&quot;&gt;T^* = Min\{T_j, j \in N^{**}\}&lt;/script&gt;, and &lt;script type=&quot;math/tex&quot;&gt;k \in N^{**}&lt;/script&gt; be the node for which &lt;script type=&quot;math/tex&quot;&gt;T_k = T^*&lt;/script&gt;. If &lt;script type=&quot;math/tex&quot;&gt;k&lt;/script&gt; is the destination node, then terminate, &lt;script type=&quot;math/tex&quot;&gt;T^*&lt;/script&gt; is the length of the shortest route. Otherwise transfer &lt;script type=&quot;math/tex&quot;&gt;k&lt;/script&gt; from from &lt;script type=&quot;math/tex&quot;&gt;N^{**}&lt;/script&gt; to &lt;script type=&quot;math/tex&quot;&gt;N^*&lt;/script&gt;. &lt;strong&gt;Here $k$ actually means the next valid point, instead of the $k$ mentioned in the first step.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;something-confused&quot;&gt;Something Confused&lt;/h1&gt;
&lt;p&gt;This note is mostly a copy from the orginal paper &lt;em&gt;Shortest Route with Time Dependent Length of Edges and Limited Delay Possibilities in Nodes&lt;/em&gt; by &lt;em&gt;J.Halpern&lt;/em&gt;. I just add some note on where there can be misunderstood if you read it for the first time. But still, I am confused in the following part:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The organism of updating $A_j$;&lt;/li&gt;
  &lt;li&gt;Why not set $N^{**}$ to $\varnothing$ after transfer node. It looks like not only one node is added in step 3;&lt;/li&gt;
  &lt;li&gt;It looks like $T^*$ represents the arrival time of entering the destination, why it is the length of the shortest route?&lt;/li&gt;
&lt;/ul&gt;
</description>
				<pubDate>Mon, 03 Sep 2018 13:19:51 +0800</pubDate>
				<link>http://localhost:4000/literature_study/2018/09/03/shortest-route-searching-with-limited-delay.html</link>
				<guid isPermaLink="true">http://localhost:4000/literature_study/2018/09/03/shortest-route-searching-with-limited-delay.html</guid>
			</item>
		
			<item>
				<title>SSH Configuration</title>
				<description>&lt;h2 id=&quot;ssh-configuration&quot;&gt;SSH configuration&lt;/h2&gt;

</description>
				<pubDate>Sat, 01 Sep 2018 00:00:00 +0800</pubDate>
				<link>http://localhost:4000/blog/2018/09/01/ssh-config.html</link>
				<guid isPermaLink="true">http://localhost:4000/blog/2018/09/01/ssh-config.html</guid>
			</item>
		
			<item>
				<title>Welcome</title>
				<description>&lt;h2 id=&quot;welcome-to-github-pages&quot;&gt;Welcome to GitHub Pages&lt;/h2&gt;

&lt;p&gt;You can use the &lt;a href=&quot;https://github.com/Dayelyn/Dayelyn.github.io/edit/master/index.md&quot;&gt;editor on GitHub&lt;/a&gt; to maintain and preview the content for your website in Markdown files.&lt;/p&gt;

&lt;p&gt;Whenever you commit to this repository, GitHub Pages will run &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; to rebuild the pages in your site, from the content in your Markdown files.&lt;/p&gt;

&lt;h3 id=&quot;markdown&quot;&gt;Markdown&lt;/h3&gt;

&lt;p&gt;Markdown is a lightweight and easy-to-use syntax for styling your writing. It includes conventions for&lt;/p&gt;

&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Syntax highlighted code block

&lt;span class=&quot;gh&quot;&gt;# Header 1&lt;/span&gt;
&lt;span class=&quot;gu&quot;&gt;## Header 2&lt;/span&gt;
&lt;span class=&quot;gu&quot;&gt;### Header 3&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;
-&lt;/span&gt; Bulleted
&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; List
&lt;span class=&quot;p&quot;&gt;
1.&lt;/span&gt; Numbered
&lt;span class=&quot;p&quot;&gt;2.&lt;/span&gt; List

&lt;span class=&quot;gs&quot;&gt;**Bold**&lt;/span&gt; and _Italic_ and &lt;span class=&quot;sb&quot;&gt;`Code`&lt;/span&gt; text

&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; and !&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For more details see &lt;a href=&quot;https://guides.github.com/features/mastering-markdown/&quot;&gt;GitHub Flavored Markdown&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;jekyll-themes&quot;&gt;Jekyll Themes&lt;/h3&gt;

&lt;p&gt;Your Pages site will use the layout and styles from the Jekyll theme you have selected in your &lt;a href=&quot;https://github.com/Dayelyn/Dayelyn.github.io/settings&quot;&gt;repository settings&lt;/a&gt;. The name of this theme is saved in the Jekyll &lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt; configuration file.&lt;/p&gt;

&lt;h3 id=&quot;support-or-contact&quot;&gt;Support or Contact&lt;/h3&gt;

&lt;p&gt;Having trouble with Pages? Check out our &lt;a href=&quot;https://help.github.com/categories/github-pages-basics/&quot;&gt;documentation&lt;/a&gt; or &lt;a href=&quot;https://github.com/contact&quot;&gt;contact support&lt;/a&gt; and we’ll help you sort it out.&lt;/p&gt;
</description>
				<pubDate>Fri, 31 Aug 2018 00:00:00 +0800</pubDate>
				<link>http://localhost:4000/blog/2018/08/31/welcome.html</link>
				<guid isPermaLink="true">http://localhost:4000/blog/2018/08/31/welcome.html</guid>
			</item>
		
	</channel>
</rss>
